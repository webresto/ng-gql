{"version":3,"file":"webresto-ng-gql.mjs","sources":["../../projects/webresto/ng-gql/src/lib/models/payment-method/payment-method.gql.ts","../../projects/webresto/ng-gql/src/lib/models/image/image.gql.ts","../../projects/webresto/ng-gql/src/lib/models/modifier/modifier.gql.ts","../../projects/webresto/ng-gql/src/lib/models/group-modifier/group-modifier.gql.ts","../../projects/webresto/ng-gql/src/lib/models/dish/dish.gql.ts","../../projects/webresto/ng-gql/src/lib/models/cart-dish/cart-dish.gql.ts","../../projects/webresto/ng-gql/src/lib/models/cart/cart.gql.ts","../../projects/webresto/ng-gql/src/lib/models/group/group.gql.ts","../../projects/webresto/ng-gql/src/lib/models/event-message/event-message.ts","../../projects/webresto/ng-gql/src/lib/models/navigation/navigation.gql.ts","../../projects/webresto/ng-gql/src/lib/models/index.ts","../../projects/webresto/ng-gql/src/lib/ng-gql.service.ts","../../projects/webresto/ng-gql/src/lib/services/eventer.service.ts","../../projects/webresto/ng-gql/src/lib/services/ng-cart.service.ts","../../projects/webresto/ng-gql/src/lib/directives/add-dish-to-cart.directive.ts","../../projects/webresto/ng-gql/src/lib/directives/checkout.directive.ts","../../projects/webresto/ng-gql/src/lib/ng-gql.module.ts","../../projects/webresto/ng-gql/src/public-api.ts","../../projects/webresto/ng-gql/src/webresto-ng-gql.ts"],"sourcesContent":["import { gql } from 'apollo-angular';\nimport type { CustomfFields } from '../custom-fields/custom-fields';\n\nexport const PaymentMethodFragments = {\n\tpaymentMethod: gql`\n\t\tfragment PaymentMethodFragment on PaymentMethod {\n\t\t\tid\n\t\t\ttype\n\t\t\ttitle\n\t\t\tdescription\n\t\t\tadapter\n\t\t\torder\n\t\t\tenable\n\t\t\tcustomData\n\t\t}\n\t`\n};\n\nexport const PaymentMethodGql = {\n\tqueries: {\n\t\tgetPaymentMethod: (cartId: string | null = null, customFields:CustomfFields) => {\n\t\t\tif (cartId == 'null') {\n\t\t\t\tcartId = null;\n\t\t\t};\n\t\t\tconst queryArguments = cartId ? `(cartId: \"${cartId}\")` : '';\n\t\t\treturn gql`\n\t\t\t\tquery GetPaymentMethods {\n\t\t\t\t\tpaymentMethods:paymentMethod${queryArguments} {\n\t\t\t\t\t\t...PaymentMethodFragment\n\t\t\t\t\t\t${(customFields['PaymentMethod'] || []).join('\\n')}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t${PaymentMethodFragments.paymentMethod}\n\t\t\t`;\n\t\t}\n\t}\n}","import { gql } from 'apollo-angular';\n\nexport const ImageFragments = {\n\timage: gql`\n\t\tfragment ImageFragment on Image {\n\t\t\tid\n\t\t\tuploadDate\n\t\t\timages\n\t\t}\n\t`\n};\n","import { gql } from 'apollo-angular';\nimport { ImageFragments } from '../image/image.gql';\n\nexport const ModifierFragments = {\n\tmodifier: gql`\n\t\tfragment ModifierFragment on Modifier {\n\t\t\tmodifierId\n\t\t\tmaxAmount\n\t\t\tminAmount\n\t\t\tdefaultAmount\n\t\t\thideIfDefaultAmount\n\t\t\tdish {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tdescription\n\t\t\t\tgroupId\n\t\t\t\tprice\n\t\t\t\tweight\n\t\t\t\tbalance\n\t\t\t\ttags\n\t\t\t\timages {\n\t\t\t\t\t...ImageFragment\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t${ImageFragments.image}\n\t`\n};\n","import { gql } from 'apollo-angular';\nimport { ModifierFragments } from '../modifier/modifier.gql';\n\nexport const GroupModifierFragments = {\n\tgroupModifier: gql`\n\t\tfragment GroupModifierFragment on GroupModifier {\n\t\t\tmodifierId\n\t\t\tmaxAmount\n\t\t\tminAmount\n\t\t\trequired\n\t\t\tchildModifiers {\n\t\t\t\t...ModifierFragment\n\t\t\t}\n\t\t\tgroup {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t\t${ModifierFragments.modifier}\n\t`\n};\n","import { gql } from 'apollo-angular';\nimport { ImageFragments } from '../image/image.gql';\nimport { GroupModifierFragments } from '../group-modifier/group-modifier.gql';\nimport type { CustomfFields } from '../custom-fields/custom-fields';\n\nexport const DishFragments = {\n\tdish: gql`\n\t\tfragment DishFragment on Dish {\n\t\t\tid\n\t\t\tname\n\t\t\tdescription\n\t\t\tgroupId\n\t\t\tprice\n\t\t\tweight\n\t\t\tbalance\n\t\t\ttags\n\t\t\tadditionalInfo\n\t\t\tseoDescription\n\t\t\tseoKeywords\n\t\t\tseoText\n\t\t\tseoTitle\n\t\t\tcarbohydrateAmount\n\t\t\tcarbohydrateFullAmount\n\t\t\tenergyAmount\n\t\t\tenergyFullAmount\n\t\t\tfatAmount\n\t\t\tfatFullAmount\n\t\t\tfiberAmount\n\t\t\tfiberFullAmount\n\t\t\tmeasureUnit\n\t\t\ttype\n\t\t\torder\n\t\t\tisDeleted\n\t\t\tisModificable\n\t\t\tcomposition\n\t\t\tvisible\n\t\t\tmodifier\n\t\t\tpromo\n\t\t\timages {\n\t\t\t\t...ImageFragment\n\t\t\t}\n\t\t\tmodifiers {\n\t\t\t\t...GroupModifierFragment\n\t\t\t}\n\t\t\tparentGroup {\n\t\t\t\tid\n\t\t\t\tdishPlaceholder {\n\t\t\t\t\t...ImageFragment\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t${ImageFragments.image}\n\t\t${GroupModifierFragments.groupModifier}\n\t`\n};\n\nexport const DishGql = {\n\tqueries: {\n\t\tgetDishes: (customFields:CustomfFields) => gql`\n\t\t\tquery GetDishes {\n\t\t\t\tdishes {\n\t\t\t\t\t...DishFragment\n\t\t\t\t\t${(customFields['Dish'] || []).join('\\n')}\n\t\t\t\t}\n\t\t\t}\n\t\t\t${DishFragments.dish}\n\t\t`\n\t}\n}","import { gql } from 'apollo-angular';\nimport { DishFragments } from '../dish/dish.gql';\n\nexport const CartDishFragments = {\n\tcartDish: gql`\n\t\tfragment CartDishFragment on CartDish {\n\t\t\tid\n\t\t\tamount\n\t\t\tdish {\n\t\t\t\t...DishFragment\n\t\t\t}\n\t\t\tmodifiers {\n\t\t\t\tid\n\t\t\t\tdish {\n\t\t\t\t\t...DishFragment\n\t\t\t\t}\n\t\t\t\tamount\n\t\t\t\tgroupId\n\t\t\t}\n\t\t\tdiscountTotal\n\t\t\tdiscountType\n\t\t\tcomment\n\t\t\tweight\n\t\t\ttotalWeight\n\t\t\titemTotal\n\t\t\tuniqueItems\n\t\t}\n\t\t${DishFragments.dish}\n\t`\n};","import { gql } from 'apollo-angular';\nimport { PaymentMethodFragments } from '../payment-method/payment-method.gql';\nimport { CartDishFragments } from '../cart-dish/cart-dish.gql';\nimport { DishFragments } from '../dish/dish.gql';\nimport { CartModifier } from '../modifier/cart-modifier';\nimport type { CustomfFields } from '../custom-fields/custom-fields';\n\nexport type AddToCartInput = {\n\tcartId?: string,\n\tdishId?: string,\n\tamount?: number,\n\tmodifiers?: CartModifier[],\n\tcomment?: string,\n\tfrom?: string,\n\treplace?: boolean,\n\tcartDishId?: string\n};\n\nexport type RemoveFromCartInput = {\n\tcartId?: string,\n\tcartDishId?: number,\n\tamount?: number\n};\n\nexport type SetDishAmountInput = {\n\tcartId?: string,\n\tcartDishId?: number,\n\tamount?: number\n};\n\nexport type SetDishCommentInput = {\n\tcartId?: string,\n\tcartDishId?: number,\n\tcomment?: string\n};\n\nexport type OrderCartInput = {\n\tcartId: string,\n\tpaymentMethodId?: string,\n\tselfService?: boolean,\n\tpickupAddressId?: string,\n\tlocationId?:string,\n\tdate?:string,\n\taddress?: {\n\t\tstreetId?: string,\n\t\thome?: string,\n\t\tcomment?: string,\n\t\tcity?: string,\n\t\tstreet?: string,\n\t\thousing?: string,\n\t\tindex?: string,\n\t\tentrance?: string,\n\t\tfloor?: string,\n\t\tapartment?: string,\n\t\tdoorphone?: string\n\t},\n\tcustomer?: {\n\t\tphone?: string,\n\t\tmail?: string,\n\t\tname?: string\n\t},\n\tcomment?: string,\n\tnotifyMethodId?:string,\n\tcustomData?: any\n};\n\nexport type CheckPhoneCodeInput = {\n\tphone: string,\n\tcode: string\n};\n\nexport const CartFragments = {\n\tcart: gql`\n\t\tfragment CartFragment on Cart {\n\t\t\tid\n\t\t\tdishesCount\n\t\t\tcomment\n\t\t\tpersonsCount\n\t\t\tdeliveryDescription\n\t\t\tmessage\n\t\t\tdeliveryCost\n\t\t\ttotalWeight\n\t\t\ttotal\n\t\t\torderTotal\n\t\t\tcartTotal\n\t\t\tdiscountTotal\n\t\t\tstate\n\t\t\tcustomData\n\t\t}\n\t`,\n\tcartOrderData: gql`\n\t\tfragment CartOrderDataFragment on Cart {\n\t\t\trmsDelivered\n\t\t\trmsId\n\t\t\trmsOrderNumber\n\t\t\trmsOrderData\n\t\t\trmsDeliveryDate\n\t\t\trmsErrorMessage\n\t\t\trmsErrorCode\n\t\t\trmsStatusCode\n\t\t\tcustomer\n\t\t\taddress\n\t\t\tpaid\n\t\t\tisPaymentPromise\n\t\t}\n\t`,\n};\n\nexport const CartGql = {\n\tqueries: {\n\t\tgetOrder: (orderId: string, customFields:CustomfFields) => {\n\t\t\tconst queryArguments = orderId ? `(orderNumber: \"${orderId}\")` : '';\n\t\t\treturn gql`\n\t\t\t\tquery getOrder {\n\t\t\t\t\tgetOrder${queryArguments} {\n\t\t\t\t\t\tcart {\n\t\t\t\t\t\t\t...CartFragment\n\t\t\t\t\t\t\t...CartOrderDataFragment\n\t\t\t\t\t\t\tdishes {\n\t\t\t\t\t\t\t\t...CartDishFragment\n\t\t\t\t\t\t\t\t${(customFields['CartDish'] || []).join('\\n')}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpaymentMethod {\n\t\t\t\t\t\t\t\t...PaymentMethodFragment\n\t\t\t\t\t\t\t\t${(customFields['PaymentMethod'] || []).join('\\n')}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcustomData\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t${CartFragments.cart}\n\t\t\t\t${CartDishFragments.cartDish}\n\t\t\t\t${CartFragments.cartOrderData}\n\t\t\t\t${PaymentMethodFragments.paymentMethod}\n\t\t\t`;\n\t\t},\n\t\tgetCart: (cartId: string | null = null, customFields:CustomfFields) => {\n\t\t\tif (cartId == 'null') cartId = null;\n\t\t\tconst queryArguments = cartId ? `(cartId: \"${cartId}\")` : '';\n\t\t\treturn gql`\n\t\t\t\tquery GetCart {\n\t\t\t\t\tcart${queryArguments} {\n\t\t\t\t\t\t...CartFragment\n\t\t\t\t\t\t${(customFields['Cart'] || []).join('\\n')}\n\t\t\t\t\t\tdishes {\n\t\t\t\t\t\t\t...CartDishFragment\n\t\t\t\t\t\t\t${(customFields['CartDish'] || []).join('\\n')}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t${CartFragments.cart}\n\t\t\t\t${CartDishFragments.cartDish}\n\t\t\t`;\n\t\t},\n\t\tgetPhone: (phone: string, customFields:CustomfFields) => {\n\t\t\treturn gql`\n\t\t\t\tquery phone {\n\t\t\t\t\tphone(phone: \"${phone}\") {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tphone\n\t\t\t\t\t\tisFirst\n\t\t\t\t\t\tisConfirm\n\t\t\t\t\t\tcodeTime\n\t\t\t\t\t\tconfirmCode\n\t\t\t\t\t\tcustomData\n\t\t\t\t\t\t${(customFields['Phone'] || []).join('\\n')}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t`;\n\t\t},\n\t\tcheckPhone: (phone: string, customFields:CustomfFields) => {\n\t\t\treturn gql`\n\t\t\t\tquery checkPhone {\n\t\t\t\t\tcheckPhone(phone: \"${phone}\") {\n\t\t\t\t\t\ttype\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tmessage\n\t\t\t\t\t\tconfirmed\n\t\t\t\t\t\tfirstbuy\n\t\t\t\t\t\t${(customFields['Phone'] || []).join('\\n')}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t`;\n\t\t}\n\t},\n\tmutations: {\n\t\taddDishToCart: (customFields:CustomfFields) => {\n\t\t\treturn gql`\n\t\t\t\tmutation AddDishToCart(\n\t\t\t\t\t$cartId: String, \n\t\t\t\t\t$dishId: String, \n\t\t\t\t\t$amount: Int, \n\t\t\t\t\t$modifiers: Json, \n\t\t\t\t\t$comment: String,\n\t\t\t\t\t$from: String,\n\t\t\t\t\t$replace: Boolean,\n\t\t\t\t\t$cartDishId: Int\n\t\t\t\t) {\n\t\t\t\t\tcartAddDish(\n\t\t\t\t\t\tcartId: $cartId,\n\t\t\t\t\t\tdishId: $dishId,\n\t\t\t\t\t\tamount: $amount,\n\t\t\t\t\t\tmodifiers: $modifiers,\n\t\t\t\t\t\tcomment: $comment,\n\t\t\t\t\t\tfrom: $from,\n\t\t\t\t\t\treplace: $replace,\n\t\t\t\t\t\tcartDishId: $cartDishId\n\t\t\t\t\t) {\n\t\t\t\t\t\t...CartFragment\n\t\t\t\t\t\t${(customFields['Cart'] || []).join('\\n')}\n\t\t\t\t\t\tdishes {\n\t\t\t\t\t\t\t...CartDishFragment\n\t\t\t\t\t\t\t${(customFields['CartDish'] || []).join('\\n')}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdeliveryItem {\n\t\t\t\t\t\t\t...DishFragment\n\t\t\t\t\t\t\t${(customFields['Dish'] || []).join('\\n')}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t${CartFragments.cart}\n\t\t\t\t${CartDishFragments.cartDish}\n\t\t\t\t${DishFragments.dish}\n\t\t\t`;\n\t\t},\n\t\tremoveDishFromCart: (customFields:CustomfFields) => {\n\t\t\treturn gql`\n\t\t\t\tmutation cartRemoveDish(\n\t\t\t\t\t$cartId: String!, \n\t\t\t\t\t$cartDishId: Int!, \n\t\t\t\t\t$amount: Int!, \n\t\t\t\t) {\n\t\t\t\t\tcartRemoveDish(\n\t\t\t\t\t\tid: $cartId,\n\t\t\t\t\t\tcartDishId: $cartDishId,\n\t\t\t\t\t\tamount: $amount,\n\t\t\t\t\t) {\n\t\t\t\t\t\t...CartFragment\n\t\t\t\t\t\t${(customFields['Cart'] || []).join('\\n')}\n\t\t\t\t\t\tdishes {\n\t\t\t\t\t\t\t...CartDishFragment\n\t\t\t\t\t\t\t${(customFields['CartDish'] || []).join('\\n')}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdeliveryItem {\n\t\t\t\t\t\t\t...DishFragment\n\t\t\t\t\t\t\t${(customFields['Dish'] || []).join('\\n')}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t${CartFragments.cart}\n\t\t\t\t${CartDishFragments.cartDish}\n\t\t\t\t${DishFragments.dish}\n\t\t\t`;\n\t\t},\n\t\tsetDishAmount: (customFields:CustomfFields) => {\n\t\t\treturn gql`\n\t\t\t\tmutation cartSetDishAmount(\n\t\t\t\t\t$cartId: String,\n\t\t\t\t\t$cartDishId: Int,\n\t\t\t\t\t$amount: Int\n\t\t\t\t) {\n\t\t\t\t\tcartSetDishAmount(\n\t\t\t\t\t\tid: $cartId,\n\t\t\t\t\t\tcartDishId: $cartDishId,\n\t\t\t\t\t\tamount: $amount\n\t\t\t\t\t) {\n\t\t\t\t\t\t...CartFragment\n\t\t\t\t\t\t${(customFields['Cart'] || []).join('\\n')}\n\t\t\t\t\t\tdishes {\n\t\t\t\t\t\t\t...CartDishFragment\n\t\t\t\t\t\t\t${(customFields['CartDish'] || []).join('\\n')}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdeliveryItem {\n\t\t\t\t\t\t\t...DishFragment\n\t\t\t\t\t\t\t${(customFields['Dish'] || []).join('\\n')}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t${CartFragments.cart}\n\t\t\t\t${CartDishFragments.cartDish}\n\t\t\t\t${DishFragments.dish}\n\t\t\t`;\n\t\t},\n\t\tsetDishComment: (customFields:CustomfFields) => {\n\t\t\treturn gql`\n\t\t\t\tmutation cartSetDishComment(\n\t\t\t\t\t$cartId: String,\n\t\t\t\t\t$cartDishId: Int,\n\t\t\t\t\t$comment: Int\n\t\t\t\t) {\n\t\t\t\t\tcartSetDishComment(\n\t\t\t\t\t\tid: $cartId,\n\t\t\t\t\t\tcartDishId: $cartDishId,\n\t\t\t\t\t\tcomment: $comment\n\t\t\t\t\t) {\n\t\t\t\t\t\t...CartFragment\n\t\t\t\t\t\t${(customFields['Cart'] || []).join('\\n')}\n\t\t\t\t\t\tdishes {\n\t\t\t\t\t\t\t...CartDishFragment\n\t\t\t\t\t\t\t${(customFields['CartDish'] || []).join('\\n')}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdeliveryItem {\n\t\t\t\t\t\t\t...DishFragment\n\t\t\t\t\t\t\t${(customFields['Dish'] || []).join('\\n')}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t${CartFragments.cart}\n\t\t\t\t${CartDishFragments.cartDish}\n\t\t\t\t${DishFragments.dish}\n\t\t\t`;\n\t\t},\n\t\torderCart: (customFields:CustomfFields) => {\n\t\t\treturn gql`\n\t\t\t\tmutation orderCart(\n\t\t\t\t\t$cartId: String!, \n\t\t\t\t\t$paymentMethodId: String!,\n\t\t\t\t\t$selfService: Boolean,\n\t\t\t\t\t$address: Address,\n\t\t\t\t\t$customer: Customer!\n\t\t\t\t) {\n\t\t\t\t\torderCart(\n\t\t\t\t\t\tcartId: $cartId,\n\t\t\t\t\t\tpaymentMethodId: $paymentMethodId,\n\t\t\t\t\t\tselfService: $selfService,\n\t\t\t\t\t\taddress: $address,\n\t\t\t\t\t\tcustomer: $customer\n\t\t\t\t\t) {\n\t\t\t\t\t\tcart {\n\t\t\t\t\t\t\t...CartFragment\n\t\t\t\t\t\t\t${(customFields['Cart'] || []).join('\\n')}\n\t\t\t\t\t\t\tdishes {\n\t\t\t\t\t\t\t\t...CartDishFragment\n\t\t\t\t\t\t\t\t${(customFields['CartDish'] || []).join('\\n')}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdeliveryItem {\n\t\t\t\t\t\t\t\t...DishFragment\n\t\t\t\t\t\t\t\t${(customFields['Dish'] || []).join('\\n')}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmessage {\n\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\ttype\n\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t}\n\t\t\t\t\t\taction {\n\t\t\t\t\t\t\ttype\n\t\t\t\t\t\t\tdata\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t${CartFragments.cart}\n\t\t\t\t${CartDishFragments.cartDish}\n\t\t\t\t${DishFragments.dish}\n\t\t\t`;\n\t\t},\n\t\tcheckCart: (customFields:CustomfFields) => {\n\t\t\treturn gql`\n\t\t\t\tmutation checkCart(\n\t\t\t\t\t$cartId: String!, \n\t\t\t\t\t$paymentMethodId: String!,\n\t\t\t\t\t$selfService: Boolean,\n\t\t\t\t\t$address: Address,\n\t\t\t\t\t$customer: Customer!,\n\t\t\t\t\t$comment: String,\n\t\t\t\t\t$date: String,\n\t\t\t\t\t$customData: Json\n\t\t\t\t) {\n\t\t\t\t\tcheckCart(\n\t\t\t\t\t\tcartId: $cartId,\n\t\t\t\t\t\tpaymentMethodId: $paymentMethodId,\n\t\t\t\t\t\tselfService: $selfService,\n\t\t\t\t\t\taddress: $address,\n\t\t\t\t\t\tcustomer: $customer,\n\t\t\t\t\t\tcomment: $comment,\n\t\t\t\t\t\tdate: $date,\n\t\t\t\t\t\tcustomData: $customData\n\t\t\t\t\t) {\n\t\t\t\t\t\tcart {\n\t\t\t\t\t\t\t...CartFragment\n\t\t\t\t\t\t\t${(customFields['Cart'] || []).join('\\n')}\n\t\t\t\t\t\t\tdishes {\n\t\t\t\t\t\t\t\t...CartDishFragment\n\t\t\t\t\t\t\t\t${(customFields['CartDish'] || []).join('\\n')}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdeliveryItem {\n\t\t\t\t\t\t\t\t...DishFragment\n\t\t\t\t\t\t\t\t${(customFields['Dish'] || []).join('\\n')}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmessage {\n\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\ttype\n\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t}\n\t\t\t\t\t\taction {\n\t\t\t\t\t\t\ttype\n\t\t\t\t\t\t\tdata\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t${CartFragments.cart}\n\t\t\t\t${CartDishFragments.cartDish}\n\t\t\t\t${DishFragments.dish}\n\t\t\t`;\n\t\t},\n\t\tcheckPhoneCode: (customFields:CustomfFields) => {\n\t\t\treturn gql`\n\t\t\t\tmutation checkPhoneCode(\n\t\t\t\t\t$phone: String!,\n\t\t\t\t\t$code: String!\n\t\t\t\t) {\n\t\t\t\t\tsetPhoneCode(\n\t\t\t\t\t\tphone: $phone,\n\t\t\t\t\t\tcode: $code\n\t\t\t\t\t) {\n\t\t\t\t\t\ttype\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tmessage\n\t\t\t\t\t\tconfirmed\n\t\t\t\t\t\tfirstbuy\n\t\t\t\t\t\t${(customFields['PhoneCode'] || []).join('\\n')}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t`;\n\t\t},\n\t}\n}","import { gql } from 'apollo-angular';\nimport { DishFragments } from '../dish/dish.gql';\nimport type { CustomfFields } from '../custom-fields/custom-fields';\n\nexport const GroupFragments = {\n\tgroup: gql`\n\t\tfragment GroupFragment on Group {\n\t\t\tid\n\t\t\tdescription\n\t\t\tname\n\t\t\torder\n\t\t\tvisible\n\t\t\tslug\n\t\t}\n\t`\n};\n\nexport const GroupGql = {\n\tqueries: {\n\t\tgetGroups: () => gql`\n\t\t\tquery GetMenu {\n\t\t\t\tgroups {\n\t\t\t\t\t...GroupFragment\n\t\t\t\t\tdishes {\n\t\t\t\t\t\t...DishFragment\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t${GroupFragments.group}\n\t\t\t${DishFragments.dish}\n\t\t`,\n\t\tgetGroupsAndDishes: (customFields:CustomfFields) => gql`\n\t\t\tquery GetGroupsAndDishes {\n\t\t\t\tgroups {\n\t\t\t\t\tparentGroup {\n\t\t\t\t\t\tid\n\t\t\t\t\t}\n\t\t\t\t\t...GroupFragment\n\t\t\t\t\t${(customFields['Group'] || []).join('\\n')}\n\t\t\t\t}\n\t\t\t\tdishes {\n\t\t\t\t\t...DishFragment\n\t\t\t\t\t${(customFields['Dish'] || []).join('\\n')}\n\t\t\t\t}\n\t\t\t}\n\t\t\t${GroupFragments.group}\n\t\t\t${DishFragments.dish}\n\t\t`\n\t}\n}","export class EventMessage {\n  type:string;\n  title:string;\n  body:string;\n\n  constructor(type: string, title: string, body: string) {\n    this.type = type;\n    this.title = title;\n    this.body = body;\n  }\n}\n","import {gql} from 'apollo-angular';\nimport type { CustomfFields } from '../custom-fields/custom-fields';\n\nexport const NavigationFragments = {\n\tnavigation: gql`\n\t\tfragment NavigationFragment on Navigation {\n\t\t\tid \n\t\t\tname\n\t\t\tdescription\n\t\t\tdata {\n\t\t\t\tlabel\n\t\t\t\tlink\n\t\t\t\ttimeWork\n\t\t\t\tphone\n\t\t\t\ticon\n\t\t\t\tactive\n\t\t\t\tcontroller\n\t\t\t\tslug\n\t\t\t\twarning\n\t\t\t\tchild {\n\t\t\t\t\ttags\n\t\t\t\t\tslug\n\t\t\t\t\tvisible\n\t\t\t\t\tname\n\t\t\t\t\tdiscount\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`\n};\n\nexport const NavigationGql = {\n\tqueries: {\n\t\tgetNavigationes: (customFields:CustomfFields) => gql`\n\t\t\tquery GetNavigation {\n\t\t\t\tnavigation {\n\t\t\t\t\t...NavigationFragment\n\t\t\t\t\t${(customFields['Navigation'] || []).join('\\n')}\n\t\t\t\t}\n\t\t\t}\n\t\t\t${NavigationFragments.navigation}\n\t\t`\n\t}\n}","export * from './cart';\nexport * from './cart-dish/cart-dish';;\nexport * from './dish/dish';\nexport * from './dish/dish.gql';\nexport * from './group/group';\nexport * from './group/group.gql';\nexport * from './modifier/modifier';\nexport * from './modifier/cart-modifier';\nexport * from './group-modifier/group-modifier';\nexport * from './payment-method/payment-method';\nexport * from './payment-method/payment-method.gql';\nexport * from './event-message/event-message';\nexport * from './navigation/navigation';\nexport * from './navigation/navigation.gql';","import { Injectable } from '@angular/core';\nimport type { FetchResult } from '@apollo/client/core';\nimport { Apollo, gql } from 'apollo-angular';\nimport { BehaviorSubject } from 'rxjs';\nimport { tap, filter, take, map, first } from 'rxjs/operators';\nimport type { Observable } from 'rxjs';\nimport { Group, Dish, Cart, Order, Phone, CheckPhoneResponse, PaymentMethod, CheckResponse, Navigation, NavigationGql, DishGql, PaymentMethodGql } from './models';\nimport { CartGql, GroupGql, AddToCartInput, OrderCartInput, CheckPhoneCodeInput, RemoveFromCartInput, SetDishAmountInput, SetDishCommentInput } from './models';\n\nexport type NavigationData = {\n  [key: string]: Navigation\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgGqlService {\n\n  menu$: BehaviorSubject<Group[] | null> = new BehaviorSubject<Group[] | null>(null);\n  menuLoading: boolean | undefined;\n\n  dishes$: BehaviorSubject<Dish[] | null> = new BehaviorSubject<Dish[] | null>(null);\n  dishesLoading: boolean | undefined;\n\n  cart$: BehaviorSubject<Cart | null> = new BehaviorSubject<Cart | null>(null);\n  cartLoading: boolean | undefined;\n\n  navigationData$: BehaviorSubject<NavigationData | null> = new BehaviorSubject<NavigationData | null>(null);\n  navigationDataLoading: boolean | undefined;\n\n  paymentMethodLoading: boolean | undefined;\n  getPhoneLoading: boolean | undefined;\n  checkPhoneLoading: boolean | undefined;\n\n  customFields: { [key: string]: string[] } = {};\n\n  constructor(private apollo: Apollo) {\n    this.cart$.subscribe(res => console.log('control cart res', res));\n  }\n\n  addCustomField(modelName: string, field: string) {\n    if (!this.customFields[modelName]) {\n      this.customFields[modelName] = [];\n    }\n    if (this.customFields[modelName].indexOf(field) == -1) {\n      this.customFields[modelName].push(field);\n    }\n  }\n\n  getNavigation$(): BehaviorSubject<NavigationData | null> {\n    if (!this.navigationData$.getValue() && !this.navigationDataLoading) {\n      this.apollo.watchQuery<any>({\n        query: NavigationGql.queries.getNavigationes(this.customFields)\n      })\n        .valueChanges\n        .pipe(\n          tap(({ data, loading }) => {\n            this.menuLoading = loading;\n            const navigationData: NavigationData = {};\n            for (let navigation of data.navigation) {\n              navigationData[navigation.name] = navigation;\n            }\n            this.navigationData$.next(navigationData);\n          })\n        )\n        .subscribe();\n    }\n    return this.navigationData$;\n  }\n\n  getMenu$(slug: string | string[] | undefined): BehaviorSubject<Group[] | null> {\n    if (!this.menu$.getValue() && !this.menuLoading) {\n      this.apollo.watchQuery<any>({\n        query: GroupGql.queries.getGroupsAndDishes(this.customFields)\n      })\n        .valueChanges\n        .pipe(\n          first(),\n          tap(({ data, loading }) => {\n            this.menuLoading = loading;\n            const { groups, dishes } = data;\n            const groupsById: {\n              [key: string]: Group\n            } = {};\n            const groupIdsBySlug: {\n              [key: string]: string\n            } = {};\n            // Groups indexing\n            for (let group of groups) {\n              groupsById[group.id] = {\n                ...group,\n                dishes: [],\n                childGroups: []\n              };\n            }\n            // Inserting dishes by groups\n            for (let dish of dishes) {\n              //const { groupId } = dish;\n              const groupId = dish.parentGroup?.id;\n              if (!groupId) continue;\n              if (!groupsById[groupId]) continue;\n              groupsById[groupId].dishes?.push(dish);\n            }\n            // Create groups hierarchy\n            for (let groupId in groupsById) {\n              const group = groupsById[groupId];\n\n              try {\n                group.dishes?.sort((a, b) => (a.order ?? 0) - (b.order ?? 0));\n              } catch (e) {\n                console.warn(`Group ${groupId} sort error`, e);\n              }\n\n              const parentGroupId = group.parentGroup?.id;\n              groupIdsBySlug[group.slug!] = groupId;\n              if (!parentGroupId) continue;\n              if (!groupsById[parentGroupId]) continue;\n              groupsById[parentGroupId].childGroups.push(group);\n              //delete groupsById[groupId];\n            }\n\n            if (slug) {\n              switch (typeof slug) {\n                case 'string':\n                  if (!groupIdsBySlug[slug]) {\n                    this.menu$.next([]);\n                    return;\n                  }\n                  this.menu$.next(groupsById[groupIdsBySlug[slug]].childGroups.sort((g1: Group, g2: Group) => g1.order - g2.order));\n                  break;\n                case 'object':\n                  if (!slug.length) {\n                    this.menu$.next([]);\n                    return;\n                  }\n                  this.menu$.next(slug.map(s => groupsById[groupIdsBySlug[s]]))\n                  break;\n              }\n              return;\n            }\n\n            const groupsAndDishes: Group[] = Object.values(groupsById).sort((g1: Group, g2: Group) => g1.order - g2.order) as Group[];\n            this.menu$.next(groupsAndDishes);\n          })\n        )\n        .subscribe();\n    }\n    return this.menu$;\n  }\n\n  getDishes$(): BehaviorSubject<Dish[] | null> {\n    if (!this.dishes$.getValue() && !this.dishesLoading) {\n      this.apollo.watchQuery<any>({\n        query: DishGql.queries.getDishes(this.customFields)\n      })\n        .valueChanges\n        .pipe(\n          tap(({ data, loading }) => {\n            this.dishesLoading = loading;\n            this.dishes$.next(data.dishes);\n          })\n        )\n        .subscribe();\n    }\n    return this.dishes$;\n  }\n\n  getOrder$(orderId: string): Observable<Order> {\n    return this.apollo.watchQuery<any>({\n      query: CartGql.queries.getOrder(orderId, this.customFields)\n    })\n      .valueChanges\n      .pipe(\n        take(1),\n        map(({ data }) => data.getOrder)\n      )\n  }\n\n  getCart$(cartId: string | undefined): Observable<Cart> {\n    const lastCart = this.cart$.getValue();\n    if (!(lastCart && lastCart.id == cartId) && !this.cartLoading) {\n      this.apollo.watchQuery<any>({\n        query: CartGql.queries.getCart(cartId, this.customFields),\n        canonizeResults: true,\n        fetchPolicy: 'no-cache'\n      })\n        .valueChanges\n        .pipe(\n          take(1),\n          tap(({ data, loading }) => {\n            this.cartLoading = loading;\n            this.cart$.next(data.cart);\n          })\n        )\n        .subscribe();\n    }\n    return this.cart$.asObservable().pipe(\n      filter(\n        (cart): cart is Cart => !!cart\n      )\n    );\n  }\n\n  getPhone$(phone: string): Observable<Phone> {\n    return this.apollo.watchQuery<any>({\n      query: CartGql.queries.getPhone(phone, this.customFields),\n      fetchPolicy: 'no-cache'\n    })\n      .valueChanges\n      .pipe(\n        map(({ data, loading }) => {\n          this.getPhoneLoading = loading;\n          return data.phone\n        })\n      );\n  }\n\n  checkPhone$(phone: string): Observable<CheckPhoneResponse> {\n    return this.apollo.watchQuery<any>({\n      query: CartGql.queries.checkPhone(phone, this.customFields),\n      fetchPolicy: 'no-cache'\n    })\n      .valueChanges\n      .pipe(\n        map(({ data, loading }) => {\n          this.checkPhoneLoading = loading;\n          return data.checkPhone\n        })\n      );\n  }\n\n  getPaymentMethods$(cartId: string): Observable<PaymentMethod[]> {\n    return this.apollo.watchQuery<any>({\n      query: PaymentMethodGql.queries.getPaymentMethod(cartId, this.customFields)\n    })\n      .valueChanges\n      .pipe(\n        map(({ data, loading }) => {\n          this.paymentMethodLoading = loading;\n          return data.paymentMethods\n        })\n      );\n  }\n\n  addDishToCart$(data: AddToCartInput): Observable<Cart> {\n    return this.apollo.mutate<{\n      cartAddDish: Cart\n    }>({\n      mutation: CartGql.mutations.addDishToCart(this.customFields),\n      variables: data\n    })\n      .pipe(\n        map(({ data }) => {\n          const cart: Cart = data!.cartAddDish;\n          if (cart) {\n            this.cart$.next(cart);\n          };\n          return cart;\n        })\n      )\n  }\n\n  orderCart$(data: OrderCartInput): Observable<CheckResponse> {\n    return this.apollo.mutate<{\n      orderCart: CheckResponse\n    }>({\n      mutation: CartGql.mutations.orderCart(this.customFields),\n      variables: data\n    })\n      .pipe(\n        map(({ data }) => {\n          const checkResponse: CheckResponse = data!.orderCart;\n          this.cart$.next(checkResponse.cart);\n          return checkResponse;\n        })\n      )\n  }\n\n  checkCart$(data: OrderCartInput): Observable<CheckResponse> {\n    return this.apollo.mutate<{\n      checkCart: CheckResponse\n    }>({\n      mutation: CartGql.mutations.checkCart(this.customFields),\n      variables: data\n    })\n      .pipe(\n        map(({ data }) => {\n          const checkResponse: CheckResponse = data!['checkCart'];\n          this.cart$.next(checkResponse.cart);\n          return checkResponse;\n        })\n      )\n  }\n\n  checkPhoneCode$(data: CheckPhoneCodeInput): Observable<CheckPhoneResponse> {\n    return this.apollo.mutate<{\n      setPhoneCode: CheckPhoneResponse\n    }>({\n      mutation: CartGql.mutations.checkPhoneCode(this.customFields),\n      variables: data\n    })\n      .pipe(\n        map(({ data }) => {\n          const checkPhoneResponse: CheckPhoneResponse = data!['setPhoneCode'];\n          return checkPhoneResponse;\n        })\n      )\n  }\n\n  removeDishFromCart$(data: RemoveFromCartInput): Observable<Cart> {\n    return this.apollo.mutate<{\n      cartRemoveDish: Cart\n    }>({\n      mutation: CartGql.mutations.removeDishFromCart(this.customFields),\n      variables: data\n    })\n      .pipe(\n        map(({ data }) => {\n          const cart: Cart = data!['cartRemoveDish'];\n          this.cart$.next(cart);\n          return cart;\n        })\n      )\n  }\n\n  setDishAmount$(data: SetDishAmountInput): Observable<Cart> {\n    return this.apollo.mutate<{\n      cartSetDishAmount: Cart\n    }>({\n      mutation: CartGql.mutations.setDishAmount(this.customFields),\n      variables: data\n    })\n      .pipe(\n        map(({ data }) => {\n          const cart: Cart = data!['cartSetDishAmount'];\n          this.cart$.next(cart);\n          return cart;\n        })\n      )\n  }\n\n  setDishComment$(data: SetDishCommentInput): Observable<Cart> {\n    return this.apollo.mutate<{\n      cartSetDishComment: Cart\n    }>({\n      mutation: CartGql.mutations.setDishComment(this.customFields),\n      variables: data\n    })\n      .pipe(\n        map(({ data }) => {\n          const cart: Cart = data!['cartSetDishComment'];\n          this.cart$.next(cart);\n          return cart;\n        })\n      )\n  }\n\n  customQuery$<T, N extends string = `${string}`>(name: N, queryObject: Record<N, Record<Extract<T, keyof T>, boolean>>, variables: any = {}): Observable<Record<N, T | T[]>> {\n    let queryArgumentsStrings: string[] = [];\n    for (let key in variables) {\n      let valueString = variables[key];\n      switch (typeof valueString) {\n        case 'object':\n          valueString = JSON.stringify(valueString).replace(/\\{\"([^\"]+)\"\\:/gi, '{$1:')\n          break;\n        case 'string':\n          valueString = `\"${valueString}\"`;\n          break;\n      };\n      queryArgumentsStrings.push(`${key}: ${valueString}`);\n    };\n    let queryArgumentsString = queryArgumentsStrings.length\n      ? `(${queryArgumentsStrings.join(', ')})`\n      : ``;\n    let query = JSON.stringify(queryObject)\n      .replace(/\"/g, '')\n      .replace(/\\:[a-z0-9]+/gi, '')\n      .replace(/\\:/g, '');\n    if (queryArgumentsString) {\n      const queriesKeys = Object.keys(queryObject);\n      const countOfQueries = queriesKeys.length;\n      if (countOfQueries == 1) {\n        query = query.replace(new RegExp('(\\{.*)' + queriesKeys[0]), '$1' + queriesKeys[0] + queryArgumentsString);\n      }\n    };\n\n    return this.apollo.watchQuery<Record<N, T | T[]>, boolean>({\n      query: gql`query ${name}${query}`,\n      canonizeResults: true\n    }).valueChanges\n      .pipe(\n        map(\n          res => res.error || res.errors ? res.data : null),\n        filter((data): data is Record<N, T | T[]> => !!data)\n      );\n  }\n\n  customMutation$<T, N extends string = `${string}`>(name: N, queryObject: Record<N, Record<Extract<T, keyof T>, boolean>>, variables: T): Observable<FetchResult<T>>\n  customMutation$<T extends any>(name: string, queryObject: any, variables: any | undefined): Observable<FetchResult<T>>\n  customMutation$(name: string, queryObject: any, variables: any = {}): Observable<FetchResult<any>> {\n    let mutationArgumentsStrings: string[] = [];\n    for (let key in variables) {\n      let valueString: string = typeof variables[key] == 'string' ?\n        `\"${variables[key]}\"` :\n        JSON.stringify(variables[key]).replace(/\\{\"([^\"]+)\"\\:/gi, '{$1:');\n      mutationArgumentsStrings.push(`${key}: ${valueString}`);\n    }\n    let mutationArgumentsString = mutationArgumentsStrings.length !== 0\n      ? `(${mutationArgumentsStrings.join(', ')})`\n      : ``;\n    let query = JSON.stringify(queryObject)\n      .replace(/\"/g, '')\n      .replace(/\\:[a-z0-9]+/gi, '')\n      .replace(/\\:/g, '');\n    if (mutationArgumentsString) {\n      const queriesKeys = Object.keys(queryObject);\n      const countOfQueries = queriesKeys.length;\n      if (countOfQueries == 1) {\n        query = query.replace(new RegExp('(\\{.*)' + queriesKeys[0]), '$1' + queriesKeys[0] + mutationArgumentsString);\n      }\n    }\n    return this.apollo.mutate({\n      mutation: gql`mutation ${name}${query}`,\n      awaitRefetchQueries: true\n    });\n  }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport type { EventMessage } from '../models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventerService {\n  eventMessage: EventEmitter<any> = new EventEmitter();\n  eventAction: EventEmitter<any> = new EventEmitter();\n\n  constructor() { }\n\n  emitMessageEvent(message:EventMessage) {\n    this.eventMessage.emit(message);\n  }\n  emitActionEvent(action:EventMessage) {\n    this.eventAction.emit(action);\n  }\n\n  getMessageEmitter() {\n    return this.eventMessage;\n  }\n  getActionEmitter() {\n    return this.eventAction;\n  }\n}\n","import { Injectable, SimpleChanges } from '@angular/core';\nimport { BehaviorSubject, of } from 'rxjs';\nimport type { Observable, Subscription } from 'rxjs';\nimport { tap, filter, map, catchError } from 'rxjs/operators';\nimport type { EventMessage, OrderCartInput, CheckResponse, Cart, AddToCartInput, Modifier } from '../models';\nimport { NgGqlService } from '../ng-gql.service';\nimport { EventerService } from './eventer.service';\n\nconst LS_NAME = 'cartId';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgCartService {\n  cartId: string | undefined;\n  cart: BehaviorSubject<Cart | null> = new BehaviorSubject<Cart | null>(null);;\n\n  modifiers$ = new BehaviorSubject<Partial<Modifier[]>>([]);\n  modifiersMessage$: BehaviorSubject<EventMessage[]> = new BehaviorSubject<EventMessage[]>([]);\n  messages: EventMessage[] = [];\n  OrderFormChange = new BehaviorSubject<SimpleChanges |null>(null);\n  cartSubscription: Subscription | undefined;\n\n  constructor(\n    private ngGqlService: NgGqlService,\n    private eventer: EventerService\n  ) {\n    this.initialStorage();\n    this.modifiersMessage$.subscribe(messages => this.messages = messages);\n  }\n\n  getCartId(): string | undefined {\n    return localStorage.getItem(LS_NAME) ?? undefined;\n  }\n\n  setCartId(cartId: string) {\n    if (cartId) {\n      localStorage.setItem(LS_NAME, cartId);\n    }\n  }\n\n  removeCartId() {\n    localStorage.removeItem(LS_NAME);\n  }\n\n  userCart$(): BehaviorSubject<any> | Observable<any> {\n    return this.cart.pipe(filter(cart => !!cart));\n  }\n\n  setModifiers(modifiers: Modifier[], messages?: EventMessage[]): void {\n    this.modifiers$.next(modifiers);\n    if (messages) this.modifiersMessage$.next(messages);\n  }\n\n  getModifiers(): Observable<any> {\n    return this.modifiers$;\n  }\n\n  initialStorage() {\n    this.cartId = this.getCartId();\n    this.cartSubscription?.unsubscribe();\n    this.cartSubscription = this.ngGqlService\n      .getCart$(this.cartId)\n      .pipe(\n        tap(cart => {\n          console.log('cart tap', cart);\n          if (cart?.state == 'ORDER') {\n            throw new Error('Cart in order state');\n          }\n          this.setCartId(cart.id);\n        })\n      )\n      .subscribe(\n        cart => this.cart.next(cart),\n        error => this.removeCartId()\n      );\n  }\n\n  addDishToCart$(data: AddToCartInput) {\n    if (this.messages.length) {\n      this.messages.forEach(message => {\n        this.eventer.emitMessageEvent(message);\n      });\n    }\n    return this.ngGqlService.addDishToCart$(data);\n  }\n\n  removeDishFromCart$(dishId: number, amount: number) {\n    return this.ngGqlService.removeDishFromCart$({\n      cartDishId: dishId,\n      cartId: this.cartId,\n      amount\n    });\n  }\n\n\n  orderCart$(data: OrderCartInput): Observable<CheckResponse> {\n    return this.ngGqlService.orderCart$(data);\n  }\n\n  paymentLink$(phone: string, fromPhone: string): Observable<any> {\n    console.log('paymentLink', this.cartId, phone, fromPhone);\n    //return of(null);\n    return this.ngGqlService.customMutation$('paymentLink', {\n      paymentLink: 1\n    }, {\n      cartId: this.cartId,\n      phone,\n      fromPhone\n    })\n      .pipe(\n        map(data => data.data),\n        catchError(error => {\n          console.log('error', error);\n          this.eventer.emitMessageEvent({\n            type: 'info',\n            title: 'Не удалось отправить ссылку для оплаты.',\n            body: error.message\n          });\n          return of(null);\n        })\n      )\n  }\n\n  checkCart$(data: OrderCartInput): Observable<CheckResponse> {\n    console.log('Check cart$', data);\n    return this.ngGqlService.checkCart$(data);\n  }\n\n  setDishCountToCart$(dishId: number, amount: number) {\n    return this.ngGqlService.setDishAmount$({\n      cartDishId: dishId,\n      cartId: this.cartId,\n      amount\n    });\n  }\n\n  setDishComment$(dishId: number, comment: string) {\n    return this.ngGqlService.setDishComment$({\n      cartDishId: dishId,\n      cartId: this.cartId,\n      comment\n    });\n  }\n}\n","import { Directive , HostListener, Input, Output, EventEmitter} from '@angular/core';\nimport type { AddToCartInput, Cart, Dish, CartModifier } from '../models';\nimport { NgCartService } from '../services/ng-cart.service';\n\n@Directive({\n  selector: '[addToCart]'\n})\nexport class AddDishToCartDirective {\n\n  cart:Cart | undefined;\n  modifiers: CartModifier[] = [];\n\n  constructor(private cartService:NgCartService) {\n    this.cartService\n      .userCart$()\n      .subscribe(res => this.cart = res);\n    this.cartService\n      .getModifiers()\n      .subscribe(res => this.modifiers = res);\n  }\n\n  @Input() dish:Dish | undefined;\n  @Input() amountDish:number = 0;\n  @Input() comment:string | undefined;\n  @Input() replaceCartDishId:boolean = false;\n\n  @Output() loading = new EventEmitter<boolean>();\n  @Output() success = new EventEmitter<boolean>();\n  @Output() error = new EventEmitter<any>();\n\n  @HostListener('click')\n  onClick() {\n    this.addDishToCart(this.dish!.id, this.amountDish)\n  }\n\n  private addDishToCart(dishID: string, amount: number) {\n\n    let data:AddToCartInput = {\n      \"dishId\": dishID,\n      \"amount\": amount,\n      \"cartId\": undefined,\n      \"modifiers\": this.modifiers,\n      \"comment\": this.comment,\n      \"replace\": this.replaceCartDishId ? true : undefined,\n      \"cartDishId\": this.cart?.id\n    };\n\n    this.loading.emit(true);\n\n    this.cartService\n      .addDishToCart$(data)\n      .subscribe(\n        _ => this.success.emit(true),\n        e => this.error.emit(e),\n        () => {\n          this.loading.emit(false)\n        }\n      );\n  }\n\n\n}\n","import { Directive, Input, Output, HostListener, EventEmitter } from '@angular/core';\nimport type { SimpleChanges } from '@angular/core';\nimport { filter, debounceTime } from 'rxjs/operators'\nimport type { OrderCartInput, PaymentMethod } from '../models';\nimport { NgCartService } from '../services/ng-cart.service';\n\n@Directive({\n  selector: '[checkout]'\n})\nexport class CheckoutDirective {\n\n  @Input() cartTotal: any;\n  @Input() bonuses: any;\n  @Input() name: string | undefined;\n  @Input() email: string | undefined;\n  @Input() phone: string | undefined;\n  @Input() phonePaymentSmsCode: string | undefined;\n  @Input() delivery: any;\n  @Input() selfService: any;\n  @Input() locationId: string | undefined;\n\n  @Input() street: string | undefined;\n  @Input() streetId: string | undefined;\n  @Input() home: string | undefined;\n  @Input() housing: string | undefined;\n  @Input() apartment: string | undefined;\n  @Input() entrance: string | undefined;\n  @Input() doorphone: string | undefined;\n  @Input() floor: string | undefined;\n\n  @Input() paymentMethod: PaymentMethod | undefined;\n  @Input() paymentMethodId: string | undefined;\n  @Input() personsCount: number = 0;\n  @Input() comment: string | undefined;\n  @Input() callback: string | undefined;\n\n  @Input() date: string | undefined;\n  @Input() notifyMethodId: string | undefined;\n\n  @Output() success = new EventEmitter<boolean>();\n  @Output() paymentRedirect = new EventEmitter<string>();\n  @Output() error = new EventEmitter<string>();\n  @Output() isChecking = new EventEmitter<boolean>();\n\n\n  cart: any;\n  lastFormChangeKey: string | undefined;\n\n  constructor(\n    private cartService: NgCartService\n  ) {\n\n    this.cartService\n      .userCart$()\n      .subscribe(cart => this.cart = cart);\n\n    this.cartService.OrderFormChange\n      .pipe(\n        filter(value => {\n          //if((this.locationId || this.streetId) && this.home && this.phone && this.preparePhone(this.phone).length > 11) {\n          if (this.locationId || (this.streetId || this.street) && this.home || this.selfService) {\n            return true;\n          } else {\n            return false;\n          }\n        }),\n        /*filter(() => {\n          const formChangeKey = JSON.stringify({\n            1: this.locationId,\n            2: this.streetId,\n            3: this.street,\n            4: this.home,\n            5: this.cartTotal,\n            6: this.bonuses,\n            7: this.delivery,\n            8: this.paymentMethodId\n          });\n\n          if(formChangeKey !== this.lastFormChangeKey) {\n            this.lastFormChangeKey = formChangeKey;\n            return true;\n          }\n        }),*/\n        debounceTime(1000)\n      )\n      .subscribe(() => this.checkStreet());\n  }\n\n  @HostListener('click')\n  onClick() {\n    if (!this.locationId && !((this.streetId || this.street) && this.home) && !this.selfService) {\n      this.error.emit('Нужно указать адрес');\n      return;\n    }\n\n    let data: OrderCartInput = {\n      \"cartId\": this.cart.id,\n      //\"comment\": comment,\n      \"customer\": {\n        \"phone\": this.preparePhone(this.phone),\n        \"mail\": this.email,\n        \"name\": this.name\n      },\n      //\"personsCount\": +this.personsCount\n    };\n\n    if (this.paymentMethodId) {\n      data[\"paymentMethodId\"] = this.paymentMethodId;\n    }\n\n    //if(this.callback) {\n    //  data[\"customData\"] = { callback: true };\n    //  data[\"comment\"] = 'Позвоните мне для уточнения деталей. ' + data[\"comment\"];\n    //}\n\n    //if(this.date) {\n    //  data[\"date\"] = this.date;\n    //}\n\n    //if(this.notifyMethodId) {\n    //  data[\"notifyMethodId\"] = this.notifyMethodId;\n    //}\n\n    data[\"selfService\"] = this.selfService;\n\n\n    //if(this.bonuses) {\n    //  data['bonuses'] = this.bonuses.map(b => {\n    //    return {\n    //      name: b.name,\n    //      amount: b.amount\n    //    }\n    //  });\n    //}\n\n\n    if (this.locationId) {\n      //  data[\"locationId\"] = this.locationId;\n    } else {\n      data[\"address\"] = {\n        \"streetId\": this.streetId,\n        \"street\": this.street,\n        \"home\": this.home,\n        \"housing\": this.housing,\n        \"doorphone\": this.doorphone || '',\n        \"entrance\": this.entrance || '',\n        \"floor\": this.floor || '',\n        \"apartment\": this.apartment || ''\n      }\n    }\n\n    const cartId = this.cart.id;\n\n    const onSuccess = (result: { action: { data: { [x: string]: string | undefined; redirectLink: any; }; }; }) => {\n      if (result?.action?.data?.redirectLink) {\n        this.paymentRedirect.emit(result.action.data['redirectLink']);\n      } else {\n        console.log('Emit cartId', cartId);\n        this.success.emit(cartId);\n      }\n    };\n    if (this.phonePaymentSmsCode && this.phone) {\n      this.cartService\n        .paymentLink$(this.phonePaymentSmsCode, this.phone)\n        .subscribe(\n          onSuccess,\n          error => this.error.emit(error)\n        );\n    } else {\n      this.cartService\n        .orderCart$(data)\n        .subscribe(\n          onSuccess,\n          error => this.error.emit(error)\n        );\n    }\n\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.cartService.OrderFormChange.next(changes);\n  }\n\n  checkStreet() {\n\n    //if(this.streetId == '0') return;\n\n    let comment = this.comment || \"\";\n    let paymentMethod = this.paymentMethod || \"Не указано\";\n\n    let data: OrderCartInput & {\n      personsCount: number\n    } = {\n      \"cartId\": this.cart.id,\n      \"comment\": comment,\n      \"customer\": {\n        \"phone\": this.phone ? this.preparePhone(this.phone) : '',\n        \"mail\": this.email,\n        \"name\": this.name || ''\n      },\n      \"personsCount\": +this.personsCount\n    };\n\n    data[\"selfService\"] = this.selfService;\n\n    if (this.paymentMethodId) {\n      data[\"paymentMethodId\"] = this.paymentMethodId;\n    }\n\n    if (this.callback) {\n      data[\"customData\"] = { callback: true };\n      data[\"comment\"] = 'Позвоните мне для уточнения деталей. ' + data[\"comment\"];\n    }\n\n    if (this.date) {\n      data[\"date\"] = this.date;\n    }\n\n    if (this.notifyMethodId) {\n      data[\"notifyMethodId\"] = this.notifyMethodId;\n    }\n\n    if (this.locationId) {\n      data[\"locationId\"] = this.locationId;\n    } else {\n      data[\"address\"] = {\n        \"streetId\": this.streetId,\n        \"street\": this.street,\n        \"home\": this.home,\n        \"housing\": this.housing,\n        \"doorphone\": this.doorphone || '',\n        \"entrance\": this.entrance || '',\n        \"floor\": this.floor || '',\n        \"apartment\": this.apartment || ''\n      }\n    }\n\n    if (this.callback) {\n      data[\"customData\"] = { callback: true };\n    }\n\n\n    this.isChecking.emit(true);\n\n    this.cartService\n      .checkCart$(data)\n      .subscribe(\n        //() => this.success.emit(true),\n        //error => this.error.emit(error)\n        () => this.isChecking.emit(false),\n        () => this.isChecking.emit(false)\n      );\n  }\n\n  preparePhone(phone: string | undefined) {\n    if (!phone) return '';\n    phone = '+' + phone.replace(/[^0-9]/gim, '');\n    return phone.replace('+8', '+7');\n  }\n}\n","import { Inject, ModuleWithProviders, NgModule } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\nimport { HttpLink } from 'apollo-angular/http';\nimport { split } from '@apollo/client/core';\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { getMainDefinition } from '@apollo/client/utilities';\nimport { InMemoryCache } from '@apollo/client/core';\nimport { OperationDefinitionNode } from 'graphql';\nimport { AddDishToCartDirective, CheckoutDirective } from './directives';\n\n//import { ModifiresDirective } from './directives/modifires.directive';\n\nconst DIRECTIVES = [\n  AddDishToCartDirective,\n  CheckoutDirective,\n];\n\nexport interface NgGqlConfig {\n  url: string;\n}\n\n@NgModule({\n  imports: [],\n  exports: [DIRECTIVES],\n  declarations: [DIRECTIVES]\n})\nexport class NgGqlModule {\n\n  constructor(\n    apollo: Apollo,\n    httpLink: HttpLink,\n    @Inject('config') config: NgGqlConfig\n  ) {\n\n    // Create an http link:\n    const http = httpLink.create({\n      uri: config.url,\n    });\n\n    // Create a WebSocket link:\n    const ws = new WebSocketLink({\n      uri: config.url.replace('http', 'ws'),\n      options: {\n        reconnect: true,\n      },\n    });\n\n    // using the ability to split links, you can send data to each link\n    // depending on what kind of operation is being sent\n    const link = split(\n      // split based on operation type\n      ({ query }) => {\n        const { kind, operation } = getMainDefinition(query) as OperationDefinitionNode;\n        return (\n          kind === 'OperationDefinition' && operation === 'subscription'\n        );\n      },\n      ws,\n      http,\n    );\n\n    if (apollo.client) return;\n\n    apollo.create({\n      link,\n      cache: new InMemoryCache()\n    });\n  }\n\n  static forRoot(config: NgGqlConfig): ModuleWithProviders<NgGqlModule> {\n    return {\n      ngModule: NgGqlModule,\n      providers: [\n        {\n          provide: 'config',\n          useValue: config\n        }\n      ]\n    }\n  }\n}\n","/*\n * Public API Surface of ng-gql\n */\nexport * from './lib';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}